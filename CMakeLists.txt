cmake_minimum_required(VERSION 3.16)
project(sloader)

enable_testing()
set(CUSTOM_LIBC_PATH CACHE PATH "")

if(NOT CMAKE_BUILD_TYPE)
    # set(CMAKE_BUILD_TYPE "Debug")
    set(CMAKE_BUILD_TYPE "Release")
endif()

set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

include(third-party)

# get_third_party(glog)
# set(WITH_GFLAGS
#     OFF
#     CACHE INTERNAL "" FORCE)
# add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/glog
#                  ${CMAKE_CURRENT_BINARY_DIR}/glog EXCLUDE_FROM_ALL)
# include_directories(${CMAKE_CURRENT_BINARY_DIR}/glog
#                     ${CMAKE_CURRENT_BINARY_DIR}/glog/src)
# add_definitions(-DC10_USE_GLOG=1)


add_executable(sloader sloader.cc)
target_link_libraries(sloader -static)

add_executable(hello_static_libc hello.c)
target_link_libraries(hello_static_libc -static)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/CTestCustom.cmake
               ${CMAKE_CURRENT_BINARY_DIR})

add_test(
  NAME hello_static_libc_test
  COMMAND ./sloader --load hello_static_libc
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
set_tests_properties(hello_static_libc_test PROPERTIES ENVIRONMENT
                                                       "GLOG_logtostderr=1")
if(CUSTOM_LIBC_PATH)
  add_custom_target(
    hello_static_custom_libc ALL
    COMMAND
      gcc -g -c ${CMAKE_CURRENT_SOURCE_DIR}/hello.c -o
      ${CMAKE_CURRENT_BINARY_DIR}/hello_static_custom_libc.o && gcc -o
      hello_static_custom_libc -nostdlib -nostartfiles -static
      ${CUSTOM_LIBC_PATH}/lib/crt1.o ${CUSTOM_LIBC_PATH}/lib/crti.o `gcc
      --print-file-name=crtbegin.o`
      ${CMAKE_CURRENT_BINARY_DIR}/hello_static_custom_libc.o -Wl,--start-group
      ${CUSTOM_LIBC_PATH}/lib/libc.a -lgcc -lgcc_eh -Wl,--end-group `gcc
      --print-file-name=crtend.o` ${CUSTOM_LIBC_PATH}/lib/crtn.o)
  add_test(
    NAME hello_static_custom_libc_test
    COMMAND ./sloader --load hello_static_custom_libc
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
  set_tests_properties(hello_static_custom_libc_test
                       PROPERTIES ENVIRONMENT "GLOG_logtostderr=1")
endif()

add_custom_target(
  hello_asm ALL
  COMMAND nasm -f elf64 ${CMAKE_CURRENT_SOURCE_DIR}/hello.asm -o
          ${CMAKE_CURRENT_BINARY_DIR}/hello.o && ld -s -o hello_asm hello.o
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
add_test(
  NAME hello_asm_test
  COMMAND ./sloader --load hello_asm
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
set_tests_properties(hello_asm_test PROPERTIES ENVIRONMENT "GLOG_logtostderr=1")
